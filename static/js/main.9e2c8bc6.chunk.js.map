{"version":3,"sources":["Components/ContactItem/ContactItem.module.css","Components/AddContactForm/AddContactForm.module.css","Components/Section/Section.module.css","Components/Filter/Filter.module.css","Components/ContactList/ContactList.module.css","Components/EmptyText/EmptyText.module.css","Components/Section/Section.js","Components/AddContactForm/AddContactForm.js","Components/ContactItem/ContactItem.js","Components/ContactList/ContactList.js","Components/Filter/Filter.js","Components/EmptyText/EmptyText.js","App.js","index.js"],"names":["module","exports","Section","title","children","className","s","Title","AddContactForm","state","name","number","email","handleChange","e","setState","target","value","handleSubmit","preventDefault","props","onSubmit","Form","autoComplete","this","CONFIG","map","field","Label","label","id","nanoid","onChange","Input","type","pattern","required","Reminder","Button","Icon","size","Component","ContactItem","onClick","Item","Wrapper","Name","Number","TelLink","href","Email","MailLink","ContactList","contacts","contactsList","contact","Filter","total","EmptyText","Text","App","filter","addContact","alreadyExist","find","toLowerCase","alert","changeFilter","currentTarget","getFilteredContacts","includes","removeContact","contactId","prevState","parsedContacts","JSON","parse","localStorage","getItem","prevProps","setItem","stringify","filteredContacts","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9e2c8bc6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Item\":\"ContactItem_Item__2BTnl\",\"Wrapper\":\"ContactItem_Wrapper__KpfRA\",\"Name\":\"ContactItem_Name__3cqgb\",\"Number\":\"ContactItem_Number__1TAQF\",\"Email\":\"ContactItem_Email__1LGXj\",\"TelLink\":\"ContactItem_TelLink__2SQFM\",\"MailLink\":\"ContactItem_MailLink__FDdOM\",\"Button\":\"ContactItem_Button__2nmSy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"AddContactForm_Form__2kso4\",\"Label\":\"AddContactForm_Label__Yh5nt\",\"Input\":\"AddContactForm_Input__MvaeO\",\"Reminder\":\"AddContactForm_Reminder__1_p7c\",\"Button\":\"AddContactForm_Button__16lRq\",\"Icon\":\"AddContactForm_Icon__3Kjth\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Section\":\"Section_Section__N-u1U\",\"Title\":\"Section_Title__37pUK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Label\":\"Filter_Label__2W-G6\",\"Input\":\"Filter_Input__3mDEh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsList\":\"ContactList_contactsList__4k0fG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Text\":\"EmptyText_Text__29GRI\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Section.module.css';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section className={s.Section}>\r\n      {title && <h1 className={s.Title}>{title}</h1>}\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n","import React, { Component } from 'react';\r\nimport s from './AddContactForm.module.css';\r\nimport CONFIG from '../../Data/inputConfig.json';\r\nimport { nanoid } from 'nanoid';\r\nimport { AiOutlineUserAdd } from 'react-icons/ai';\r\n\r\nclass AddContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n    email: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.setState({\r\n      name: '',\r\n      number: '',\r\n      email: '',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className={s.Form} autoComplete=\"off\" onSubmit={this.handleSubmit}>\r\n        {CONFIG.map(field => (\r\n          <div key={field.name}>\r\n            <label className={s.Label}>\r\n              {field.label}\r\n              <input\r\n                id={nanoid()}\r\n                value={this.state[field.name]}\r\n                onChange={this.handleChange}\r\n                className={s.Input}\r\n                type={field.type}\r\n                name={field.name}\r\n                pattern={field.pattern}\r\n                title={field.title}\r\n                required={field.required}\r\n              />\r\n            </label>\r\n          </div>\r\n        ))}\r\n        <p className={s.Reminder}>Fields marked with * are required</p>\r\n        <button className={s.Button} type=\"submit\">\r\n          <AiOutlineUserAdd className={s.Icon} size={16} />\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContactForm;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactItem.module.css';\r\nimport { AiFillDelete } from 'react-icons/ai';\r\n\r\nfunction ContactItem({ name, number, email, onClick }) {\r\n  return (\r\n    <li className={s.Item}>\r\n      <div className={s.Wrapper}>\r\n        <p className={s.Name}>{name}:</p>\r\n        <p className={s.Number}>\r\n          <a className={s.TelLink} href={`tel:${number}`}>\r\n            {number}\r\n          </a>\r\n        </p>\r\n        <p className={s.Email}>\r\n          <a className={s.MailLink} href={`mailto:${email}`}>\r\n            {email}\r\n          </a>\r\n        </p>\r\n      </div>\r\n      <button type=\"button\" onClick={() => onClick()} className={s.Button}>\r\n        <AiFillDelete size={18} />\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default ContactItem;\r\n\r\nContactItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  email: PropTypes.string,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactList.module.css';\r\nimport ContactItem from '../ContactItem';\r\n\r\nfunction ContactList({ contacts, onClick }) {\r\n  return (\r\n    <ul className={s.contactsList}>\r\n      {contacts.map(contact => (\r\n        <ContactItem\r\n          key={contact.id}\r\n          id={contact.id}\r\n          name={contact.name}\r\n          number={contact.number}\r\n          email={contact.email}\r\n          onClick={() => onClick(contact.id)}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default ContactList;\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Filter.module.css';\r\n\r\nconst Filter = ({ value, onChange, total }) => {\r\n  return (\r\n    <label className={s.Label}>\r\n      Find contact by name in {total} contacts\r\n      <input\r\n        className={s.Input}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChange}\r\n      ></input>\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n\r\nFilter.propTypes = {\r\n  contacts: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n  total: PropTypes.number,\r\n};\r\n","import React from 'react';\r\nimport s from './EmptyText.module.css';\r\n\r\nconst EmptyText = () => {\r\n  return <p className={s.Text}>Your contact list is empty</p>;\r\n};\r\n\r\nexport default EmptyText;\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Section from './Components/Section';\r\nimport AddContactForm from './Components/AddContactForm';\r\nimport ContactList from './Components/ContactList';\r\nimport Filter from './Components/Filter';\r\nimport EmptyText from './Components/EmptyText';\r\nimport { nanoid } from 'nanoid';\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [],\r\n    filter: '',\r\n  };\r\n\r\n  addContact = ({ name, number, email }) => {\r\n    const alreadyExist = this.state.contacts.find(\r\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\r\n    );\r\n    if (!alreadyExist && name !== '' && number !== '') {\r\n      this.setState(({ contacts }) => ({\r\n        contacts: [{ id: nanoid(), name, number, email }, ...contacts],\r\n      }));\r\n    } else if (alreadyExist) {\r\n      alert(`${name} is already exists in contacts`);\r\n    } else if (name === '' || number === '') {\r\n      alert('Fill in all the fields please!');\r\n    }\r\n  };\r\n\r\n  changeFilter = e => {\r\n    this.setState({\r\n      filter: e.currentTarget.value,\r\n    });\r\n  };\r\n\r\n  getFilteredContacts = () => {\r\n    const { contacts, filter } = this.state;\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n    );\r\n  };\r\n\r\n  removeContact = contactId => {\r\n    this.setState(prevState => ({\r\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\r\n    }));\r\n  };\r\n\r\n  componentDidMount() {\r\n    const parsedContacts = JSON.parse(localStorage.getItem('contacts'));\r\n    if (parsedContacts) {\r\n      this.setState({\r\n        contacts: parsedContacts,\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevState, prevProps) {\r\n    if (this.state.contacts !== prevState.contacts) {\r\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { contacts, filter } = this.state;\r\n    const filteredContacts = this.getFilteredContacts();\r\n    return (\r\n      <div className=\"App\">\r\n        <Section title=\"Phonebook\">\r\n          <AddContactForm onSubmit={this.addContact} />\r\n        </Section>\r\n        <Section title=\"Contacts\">\r\n          {contacts.length > 1 && (\r\n            <Filter\r\n              value={filter}\r\n              onChange={this.changeFilter}\r\n              total={this.state.contacts.length}\r\n            />\r\n          )}\r\n          <ContactList\r\n            contacts={filteredContacts}\r\n            onClick={this.removeContact}\r\n          ></ContactList>\r\n          {contacts.length === 0 && <EmptyText />}\r\n        </Section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}