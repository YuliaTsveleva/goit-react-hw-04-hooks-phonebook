{"version":3,"sources":["Components/ContactItem/ContactItem.module.css","Components/AddContactForm/AddContactForm.module.css","Components/Section/Section.module.css","Components/Filter/Filter.module.css","Components/ContactList/ContactList.module.css","Components/EmptyText/EmptyText.module.css","Components/Section/Section.js","Components/AddContactForm/AddContactForm.js","Components/ContactItem/ContactItem.js","Components/ContactList/ContactList.js","Components/Filter/Filter.js","Components/EmptyText/EmptyText.js","App.js","index.js"],"names":["module","exports","Section","title","children","className","s","Title","AddContactForm","onSubmit","useState","name","setName","number","setNumber","email","setEmail","handleChange","e","target","value","resetState","states","Form","autoComplete","preventDefault","CONFIG","map","field","Label","label","id","onChange","Input","type","pattern","required","Reminder","Button","Icon","size","ContactItem","onClick","Item","Wrapper","Name","Number","TelLink","href","Email","MailLink","ContactList","contacts","contactsList","contact","Filter","total","EmptyText","Text","App","JSON","parse","localStorage","getItem","setContacts","filter","setFilter","useEffect","window","setItem","stringify","filteredContacts","toLowerCase","includes","alreadyExist","find","alert","nanoid","length","currentTarget","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.374e214a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Item\":\"ContactItem_Item__2BTnl\",\"Wrapper\":\"ContactItem_Wrapper__KpfRA\",\"Name\":\"ContactItem_Name__3cqgb\",\"Number\":\"ContactItem_Number__1TAQF\",\"Email\":\"ContactItem_Email__1LGXj\",\"TelLink\":\"ContactItem_TelLink__2SQFM\",\"MailLink\":\"ContactItem_MailLink__FDdOM\",\"Button\":\"ContactItem_Button__2nmSy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"AddContactForm_Form__2kso4\",\"Label\":\"AddContactForm_Label__Yh5nt\",\"Input\":\"AddContactForm_Input__MvaeO\",\"Reminder\":\"AddContactForm_Reminder__1_p7c\",\"Button\":\"AddContactForm_Button__16lRq\",\"Icon\":\"AddContactForm_Icon__3Kjth\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Section\":\"Section_Section__N-u1U\",\"Title\":\"Section_Title__37pUK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Label\":\"Filter_Label__2W-G6\",\"Input\":\"Filter_Input__3mDEh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsList\":\"ContactList_contactsList__4k0fG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Text\":\"EmptyText_Text__29GRI\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Section.module.css';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section className={s.Section}>\r\n      {title && <h1 className={s.Title}>{title}</h1>}\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n","import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './AddContactForm.module.css';\r\nimport CONFIG from '../../Data/inputConfig.json';\r\n// import { nanoid } from 'nanoid';\r\nimport { AiOutlineUserAdd } from 'react-icons/ai';\r\n\r\nexport default function AddContactForm({ onSubmit }) {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const [email, setEmail] = useState('');\r\n\r\n  const handleChange = e => {\r\n    switch (e.target.name) {\r\n      case 'name':\r\n        setName(e.target.value);\r\n        break;\r\n      case 'number':\r\n        setNumber(e.target.value);\r\n        break;\r\n      case 'email':\r\n        setEmail(e.target.value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    onSubmit({ name, number, email });\r\n    resetState();\r\n  };\r\n\r\n  const resetState = () => {\r\n    setName('');\r\n    setNumber('');\r\n    setEmail('');\r\n  };\r\n\r\n  const states = [name, number, email];\r\n  // разобраться с value инпута?\r\n\r\n  return (\r\n    <form className={s.Form} autoComplete=\"off\" onSubmit={handleSubmit}>\r\n      {CONFIG.map(field => (\r\n        <div key={field.name}>\r\n          <label className={s.Label}>\r\n            {field.label}\r\n            <input\r\n              id={field.id}\r\n              // value={[field.name].value}\r\n              value={states[field.id - 1]}\r\n              onChange={handleChange}\r\n              className={s.Input}\r\n              type={field.type}\r\n              name={field.name}\r\n              pattern={field.pattern}\r\n              title={field.title}\r\n              required={field.required}\r\n            />\r\n          </label>\r\n        </div>\r\n      ))}\r\n      <p className={s.Reminder}>Fields marked with * are required</p>\r\n      <button className={s.Button} type=\"submit\">\r\n        <AiOutlineUserAdd className={s.Icon} size={16} />\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nAddContactForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactItem.module.css';\r\nimport { AiFillDelete } from 'react-icons/ai';\r\n\r\nfunction ContactItem({ name, number, email, onClick }) {\r\n  return (\r\n    <li className={s.Item}>\r\n      <div className={s.Wrapper}>\r\n        <p className={s.Name}>{name}:</p>\r\n        <p className={s.Number}>\r\n          <a className={s.TelLink} href={`tel:${number}`}>\r\n            {number}\r\n          </a>\r\n        </p>\r\n        <p className={s.Email}>\r\n          <a className={s.MailLink} href={`mailto:${email}`}>\r\n            {email}\r\n          </a>\r\n        </p>\r\n      </div>\r\n      <button type=\"button\" onClick={() => onClick()} className={s.Button}>\r\n        <AiFillDelete size={18} />\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default ContactItem;\r\n\r\nContactItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  email: PropTypes.string,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactList.module.css';\r\nimport ContactItem from '../ContactItem';\r\n\r\nfunction ContactList({ contacts, onClick }) {\r\n  return (\r\n    <ul className={s.contactsList}>\r\n      {contacts.map(contact => (\r\n        <ContactItem\r\n          key={contact.id}\r\n          id={contact.id}\r\n          name={contact.name}\r\n          number={contact.number}\r\n          email={contact.email}\r\n          onClick={() => onClick(contact.id)}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default ContactList;\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Filter.module.css';\r\n\r\nconst Filter = ({ value, onChange, total }) => {\r\n  return (\r\n    <label className={s.Label}>\r\n      Find contact by name in {total} contacts\r\n      <input\r\n        className={s.Input}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChange}\r\n      ></input>\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n\r\nFilter.propTypes = {\r\n  contacts: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n  total: PropTypes.number,\r\n};\r\n","import React from 'react';\r\nimport s from './EmptyText.module.css';\r\n\r\nconst EmptyText = () => {\r\n  return <p className={s.Text}>Your contact list is empty</p>;\r\n};\r\n\r\nexport default EmptyText;\r\n","import { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport Section from './Components/Section';\r\nimport AddContactForm from './Components/AddContactForm';\r\nimport ContactList from './Components/ContactList';\r\nimport Filter from './Components/Filter';\r\nimport EmptyText from './Components/EmptyText';\r\nimport { nanoid } from 'nanoid';\r\n\r\nexport default function App() {\r\n  const [contacts, setContacts] = useState(() => {\r\n    return JSON.parse(localStorage.getItem('contacts')) ?? [];\r\n  });\r\n  const [filter, setFilter] = useState('');\r\n\r\n  const addContact = ({ name, number, email }) => {\r\n    const alreadyExist = contacts.find(\r\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\r\n    );\r\n    if (!alreadyExist && name !== '' && number !== '') {\r\n      setContacts(contacts => [\r\n        { id: nanoid(), name, number, email },\r\n        ...contacts,\r\n      ]);\r\n    } else if (alreadyExist) {\r\n      alert(`${name} is already exists in contacts`);\r\n    } else if (name === '' || number === '') {\r\n      alert('Fill in all the fields please!');\r\n    }\r\n    setFilter('');\r\n  };\r\n\r\n  const changeFilter = e => {\r\n    setFilter(e.currentTarget.value);\r\n  };\r\n\r\n  const removeContact = contactId => {\r\n    setContacts(contacts.filter(contact => contact.id !== contactId));\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.localStorage.setItem('contacts', JSON.stringify(contacts));\r\n  }, [contacts]);\r\n\r\n  const filteredContacts = contacts.filter(contact =>\r\n    contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n  );\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Section title=\"Phonebook\">\r\n        <AddContactForm onSubmit={addContact} />\r\n      </Section>\r\n      <Section title=\"Contacts\">\r\n        {contacts.length > 1 && (\r\n          <Filter\r\n            value={filter}\r\n            onChange={changeFilter}\r\n            total={contacts.length}\r\n          />\r\n        )}\r\n        <ContactList\r\n          contacts={filteredContacts}\r\n          onClick={removeContact}\r\n        ></ContactList>\r\n        {contacts.length === 0 && <EmptyText />}\r\n      </Section>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}